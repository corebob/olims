{
  "swagger": "2.0",
  "info": {
    "version": "0.0.1",
    "title": "open laboratory information management system (olims) API"
  },
  "paths": {
    "/samples": {
      "get": {
        "description": "Gets `Sample` objects. Optional query param **fields** determines which fields to return",
        "operationId": "getSamples",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Fields to return",
            "required": false,
            "type": "string"
          },
          {
            "name": "tax",
            "in": "query",
            "description": "Taxonomy tags to include",
            "required": false,
            "type": "string",
            "format": "map"
          },
          {
            "name": "tokens",
            "in": "query",
            "description": "Tokens for full text search",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          },
          {
            "name": "zip",
            "in": "query",
            "description": "Use gzip compression on response",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "envelope",
            "in": "query",
            "description": "Use envelope on response",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pretty",
            "in": "query",
            "description": "Use pretty print on response",
            "required": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Sample"
              }
            }
          },
          "default": {
            "description": "Error message",
            "schema": {
              "$ref": "#/definitions/APIError"
            }
          }
        }
      }
    },
    "/projects": {
      "get": {
        "description": "Gets `Project` objects. Optional query param **fields** determines which fields to return",
        "operationId": "getProjects",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Fields to return",
            "required": false,
            "type": "string"
          },
          {
            "name": "tax",
            "in": "query",
            "description": "Taxonomy tags to include",
            "required": false,
            "type": "string",
            "format": "map"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          },
          {
            "name": "zip",
            "in": "query",
            "description": "Use gzip compression on response",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "envelope",
            "in": "query",
            "description": "Use envelope on response",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pretty",
            "in": "query",
            "description": "Use pretty print on response",
            "required": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Project"
              }
            }
          },
          "default": {
            "description": "Error message",
            "schema": {
              "$ref": "#/definitions/APIError"
            }
          }
        }
      }
    },
    "/assigners": {
      "get": {
        "description": "Gets `Project` objects. Optional query param **fields** determines which fields to return",
        "operationId": "getAssigners",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Fields to return",
            "required": false,
            "type": "string"
          },
          {
            "name": "zip",
            "in": "query",
            "description": "Use gzip compression on response",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "envelope",
            "in": "query",
            "description": "Use envelope on response",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pretty",
            "in": "query",
            "description": "Use pretty print on response",
            "required": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Assigner"
              }
            }
          },
          "default": {
            "description": "Error message",
            "schema": {
              "$ref": "#/definitions/APIError"
            }
          }
        }
      }
    },
    "/contacts": {
      "get": {
        "description": "Gets `Project` objects. Optional query param **fields** determines which fields to return",
        "operationId": "getContacts",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Fields to return",
            "required": false,
            "type": "string"
          },
          {
            "name": "zip",
            "in": "query",
            "description": "Use gzip compression on response",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "envelope",
            "in": "query",
            "description": "Use envelope on response",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pretty",
            "in": "query",
            "description": "Use pretty print on response",
            "required": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Contact"
              }
            }
          },
          "default": {
            "description": "Error message",
            "schema": {
              "$ref": "#/definitions/APIError"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "description": "Gets `User` objects. Optional query param **fields** determines which fields to return",
        "operationId": "getUsers",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Fields to return",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          },
          {
            "name": "zip",
            "in": "query",
            "description": "Use gzip compression on response",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "envelope",
            "in": "query",
            "description": "Use envelope on response",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pretty",
            "in": "query",
            "description": "Use pretty print on response",
            "required": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "default": {
            "description": "Error message",
            "schema": {
              "$ref": "#/definitions/APIError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Sample": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "collector": {
          "type": "string"
        },
        "collect_date": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Preparation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "preparation_method": {
          "type": "string"
        }
      }
    },
    "Analysis": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "analysis_method": {
          "type": "string"
        }
      }
    },
    "Project": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "deadline": {
          "type": "string",
          "format": "date-time"
        },
        "comment": {
          "type": "string"
        }
      }
    },
    "Contract": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "state": {
          "type": "integer",
          "format": "int32"
        },
        "laboratory": {
          "type": "string"
        },
        "deadline": {
          "type": "string",
          "format": "date-time"
        },
        "content": {
          "type": "string"
        },
        "accredited": {
          "type": "boolean"
        },
        "comment": {
          "type": "string"
        },
        "signature": {
          "type": "string"
        },
        "signed": {
          "type": "boolean"
        },
        "assigner": {
          "$ref": "#/definitions/Assigner"
        },
        "responsible": {
          "$ref": "#/definitions/Contact"
        },
        "project": {
          "$ref": "#/definitions/Project"
        }
      }
    },
    "Assigner": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "phone1": {
          "type": "string"
        },
        "phone2": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "Contact": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "firstname": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "phone1": {
          "type": "string"
        },
        "phone2": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "assigner": {
          "$ref": "#/definitions/Assigner"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "APIError": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}
